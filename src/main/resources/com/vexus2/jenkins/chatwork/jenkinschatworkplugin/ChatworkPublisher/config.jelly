<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
  xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <f:entry field="rid" title="Choose room you want to notice">
    <f:select default="${descriptor.defaultRid()}"/>

    <f:radio name="roomType" title="all"    value="all"    onclick="ChatworkPublisher.resetNarrowDown()" checked="true"/>
    <f:radio name="roomType" title="direct" value="direct" onclick="ChatworkPublisher.narrowDown('direct')" />
    <f:radio name="roomType" title="group"  value="group"  onclick="ChatworkPublisher.narrowDown('group')" />
    <f:radio name="roomType" title="my"     value="my"     onclick="ChatworkPublisher.narrowDown('my')" />

    <script>
      var ChatworkPublisher = {
        resetNarrowDown: function(){
          var select = ChatworkPublisher.roomIdSelect();
          if(!select){
            return;
          }
          for(var i = 0; i != select.options.length; i++){
            var option = select.options[i];
            option.style.removeProperty("display");
          }
        },
        narrowDown: function(type){
          var select = ChatworkPublisher.roomIdSelect();
          if(!select){
            return;
          }
          var prefix = "[" + type + "]";
          for(var i = 0; i != select.options.length; i++){
            var option = select.options[i];
            if(option.innerText.startsWith(prefix)){
              option.style.removeProperty("display");
            } else {
              option.style.display = "none";
            }
          }
        },
        roomIdSelect: function(){
          var fillpath = "com.vexus2.jenkins.chatwork.jenkinschatworkplugin.ChatworkPublisher/fillRidItems";
          var selects = document.getElementsByTagName("select");
          for(var i = 0; i != selects.length; i++){
            var fillurl = selects[i].getAttribute("fillurl") || "";
            if(fillurl.endsWith(fillpath)){
              return selects[i];
            }
          }
          return null;
        }
      };
    </script>

  </f:entry>

  <f:entry title="Success message" field="successMessage"
      description="If 'Success message' is blank, used 'Global Success message'">
    <f:textarea/>
  </f:entry>
  <f:entry title="notify on build success" field="notifyOnSuccess">
    <f:checkbox/>
  </f:entry>

  <f:entry title="Failure message" field="failureMessage"
      description="If 'Failure message' is blank, used 'Global Failure message'">
    <f:textarea/>
  </f:entry>
  <f:entry title="notify on build failure" field="notifyOnFail">
    <f:checkbox/>
  </f:entry>

  <f:entry title="Unstable message" field="unstableMessage"
      description="If 'Unstable message' is blank, used 'Global Unstable message'">
    <f:textarea/>
  </f:entry>
  <f:entry title="notify on build unstable" field="notifyOnUnstable">
    <f:checkbox/>
  </f:entry>

  <f:entry title="Not built message" field="notBuiltMessage"
      description="If 'Not built message' is blank, used 'Global Not built message'">
    <f:textarea/>
  </f:entry>
  <f:entry title="notify on build not built" field="notifyOnNotBuilt">
    <f:checkbox/>
  </f:entry>

  <f:entry title="Aborted message" field="abortedMessage"
      description="If 'Aborted message' is blank, used 'Global Aborted message'">
    <f:textarea/>
  </f:entry>
  <f:entry title="notify on build aborted" field="notifyOnAborted">
    <f:checkbox/>
  </f:entry>
</j:jelly>
